// <auto-generated />
using System;
using Election.Api.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Election.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Election.Api.EntityFramework.Entities.CandidateEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ElectionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ElectionId");

                    b.ToTable("CandidateEntity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ElectionId = 1,
                            Name = "NVIDIA"
                        },
                        new
                        {
                            Id = 2,
                            ElectionId = 1,
                            Name = "SpaceX"
                        },
                        new
                        {
                            Id = 3,
                            ElectionId = 1,
                            Name = "OpenAI"
                        },
                        new
                        {
                            Id = 4,
                            ElectionId = 1,
                            Name = "Intel"
                        },
                        new
                        {
                            Id = 5,
                            ElectionId = 1,
                            Name = "Xiaomi"
                        });
                });

            modelBuilder.Entity("Election.Api.EntityFramework.Entities.ElectionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("EndedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ElectionEntity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndedOn = new DateTime(2025, 11, 5, 13, 15, 45, 781, DateTimeKind.Local).AddTicks(6167),
                            Name = "Best technology company 2025",
                            StartedOn = new DateTime(2025, 10, 29, 13, 15, 45, 779, DateTimeKind.Local).AddTicks(2304)
                        });
                });

            modelBuilder.Entity("Election.Api.EntityFramework.Entities.VoteEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CandidateId")
                        .HasColumnType("int");

                    b.Property<DateTime>("VotedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.ToTable("VoteEntity");
                });

            modelBuilder.Entity("Election.Api.EntityFramework.Entities.CandidateEntity", b =>
                {
                    b.HasOne("Election.Api.EntityFramework.Entities.ElectionEntity", "Election")
                        .WithMany("Candidates")
                        .HasForeignKey("ElectionId");

                    b.Navigation("Election");
                });

            modelBuilder.Entity("Election.Api.EntityFramework.Entities.VoteEntity", b =>
                {
                    b.HasOne("Election.Api.EntityFramework.Entities.CandidateEntity", "Candidate")
                        .WithMany("Votes")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");
                });

            modelBuilder.Entity("Election.Api.EntityFramework.Entities.CandidateEntity", b =>
                {
                    b.Navigation("Votes");
                });

            modelBuilder.Entity("Election.Api.EntityFramework.Entities.ElectionEntity", b =>
                {
                    b.Navigation("Candidates");
                });
#pragma warning restore 612, 618
        }
    }
}
